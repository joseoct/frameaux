generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  name     String
  email    String @unique
  password String
  role_id  String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  role Role @relation(fields: [role_id], onDelete: Cascade, onUpdate: Cascade,references: [id])

  UserTechnology UserTechnology[]

  @@map("users")
}

model Role {
  id   String @id @default(uuid())
  name String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  users User[]

  @@map("roles")
}

model Technology {
  id String @id @default(uuid())

  name            String @unique
  technology_image String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  UserTechnology UserTechnology[]
  Topic         Topic[]

  @@map("technologies")
}

model UserTechnology {
  id String @id @default(uuid())

  user_id       String
  technology_id  String
  current_layer Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user      User      @relation(fields: [user_id], onDelete: Cascade, onUpdate: Cascade,references: [id])
  technology Technology @relation(fields: [technology_id], onDelete: Cascade, onUpdate: Cascade,references: [id])

  @@map("users_technologies")
}

model Topic {
  id String @id @default(uuid())

  name         String
  explanation  String
  technology_id String
  layer        Float

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Level Level[]

  technology Technology @relation(fields: [technology_id], onDelete: Cascade, onUpdate: Cascade,references: [id])

  @@map("topics")
}

model Level {
  id String @id @default(uuid())

  difficulty Int
  topic_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  topic Topic @relation(fields: [topic_id], onDelete: Cascade, onUpdate: Cascade,references: [id])

  @@map("levels")
}
